/*
 * Robolucha API
 * Robolucha API
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/**
 * ModelMediaRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-26T18:37:24.497003-05:00[America/Toronto]")public class ModelMediaRequest {

  @SerializedName("base64Data")
  private String base64Data = null;

  @SerializedName("fileName")
  private String fileName = null;
  public ModelMediaRequest base64Data(String base64Data) {
    this.base64Data = base64Data;
    return this;
  }

  

  /**
  * Get base64Data
  * @return base64Data
  **/
  @Schema(description = "")
  public String getBase64Data() {
    return base64Data;
  }
  public void setBase64Data(String base64Data) {
    this.base64Data = base64Data;
  }
  public ModelMediaRequest fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

  

  /**
  * Get fileName
  * @return fileName
  **/
  @Schema(description = "")
  public String getFileName() {
    return fileName;
  }
  public void setFileName(String fileName) {
    this.fileName = fileName;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelMediaRequest modelMediaRequest = (ModelMediaRequest) o;
    return Objects.equals(this.base64Data, modelMediaRequest.base64Data) &&
        Objects.equals(this.fileName, modelMediaRequest.fileName);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(base64Data, fileName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelMediaRequest {\n");
    
    sb.append("    base64Data: ").append(toIndentedString(base64Data)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
