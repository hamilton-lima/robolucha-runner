/*
 * Robolucha API
 * Robolucha API
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * ModelGameDefinitionClassroomAvailability
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-26T18:37:24.497003-05:00[America/Toronto]")public class ModelGameDefinitionClassroomAvailability {

  @SerializedName("classrooms")
  private List<Integer> classrooms = null;

  @SerializedName("gameDefinitionID")
  private Integer gameDefinitionID = null;
  public ModelGameDefinitionClassroomAvailability classrooms(List<Integer> classrooms) {
    this.classrooms = classrooms;
    return this;
  }

  public ModelGameDefinitionClassroomAvailability addClassroomsItem(Integer classroomsItem) {
    if (this.classrooms == null) {
      this.classrooms = new ArrayList<Integer>();
    }
    this.classrooms.add(classroomsItem);
    return this;
  }

  /**
  * Get classrooms
  * @return classrooms
  **/
  @Schema(description = "")
  public List<Integer> getClassrooms() {
    return classrooms;
  }
  public void setClassrooms(List<Integer> classrooms) {
    this.classrooms = classrooms;
  }
  public ModelGameDefinitionClassroomAvailability gameDefinitionID(Integer gameDefinitionID) {
    this.gameDefinitionID = gameDefinitionID;
    return this;
  }

  

  /**
  * Get gameDefinitionID
  * @return gameDefinitionID
  **/
  @Schema(description = "")
  public Integer getGameDefinitionID() {
    return gameDefinitionID;
  }
  public void setGameDefinitionID(Integer gameDefinitionID) {
    this.gameDefinitionID = gameDefinitionID;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelGameDefinitionClassroomAvailability modelGameDefinitionClassroomAvailability = (ModelGameDefinitionClassroomAvailability) o;
    return Objects.equals(this.classrooms, modelGameDefinitionClassroomAvailability.classrooms) &&
        Objects.equals(this.gameDefinitionID, modelGameDefinitionClassroomAvailability.gameDefinitionID);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(classrooms, gameDefinitionID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelGameDefinitionClassroomAvailability {\n");
    
    sb.append("    classrooms: ").append(toIndentedString(classrooms)).append("\n");
    sb.append("    gameDefinitionID: ").append(toIndentedString(gameDefinitionID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
