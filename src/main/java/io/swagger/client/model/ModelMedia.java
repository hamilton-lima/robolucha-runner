/*
 * Robolucha API
 * Robolucha API
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/**
 * ModelMedia
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-26T18:37:24.497003-05:00[America/Toronto]")public class ModelMedia {

  @SerializedName("fileName")
  private String fileName = null;

  @SerializedName("gameDefinition")
  private Integer gameDefinition = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("narrativeDefinition")
  private Integer narrativeDefinition = null;

  @SerializedName("thumbnail")
  private String thumbnail = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("userID")
  private Integer userID = null;
  public ModelMedia fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

  

  /**
  * Get fileName
  * @return fileName
  **/
  @Schema(description = "")
  public String getFileName() {
    return fileName;
  }
  public void setFileName(String fileName) {
    this.fileName = fileName;
  }
  public ModelMedia gameDefinition(Integer gameDefinition) {
    this.gameDefinition = gameDefinition;
    return this;
  }

  

  /**
  * Get gameDefinition
  * @return gameDefinition
  **/
  @Schema(description = "")
  public Integer getGameDefinition() {
    return gameDefinition;
  }
  public void setGameDefinition(Integer gameDefinition) {
    this.gameDefinition = gameDefinition;
  }
  public ModelMedia id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public ModelMedia narrativeDefinition(Integer narrativeDefinition) {
    this.narrativeDefinition = narrativeDefinition;
    return this;
  }

  

  /**
  * Get narrativeDefinition
  * @return narrativeDefinition
  **/
  @Schema(description = "")
  public Integer getNarrativeDefinition() {
    return narrativeDefinition;
  }
  public void setNarrativeDefinition(Integer narrativeDefinition) {
    this.narrativeDefinition = narrativeDefinition;
  }
  public ModelMedia thumbnail(String thumbnail) {
    this.thumbnail = thumbnail;
    return this;
  }

  

  /**
  * Get thumbnail
  * @return thumbnail
  **/
  @Schema(description = "")
  public String getThumbnail() {
    return thumbnail;
  }
  public void setThumbnail(String thumbnail) {
    this.thumbnail = thumbnail;
  }
  public ModelMedia url(String url) {
    this.url = url;
    return this;
  }

  

  /**
  * Get url
  * @return url
  **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }
  public void setUrl(String url) {
    this.url = url;
  }
  public ModelMedia userID(Integer userID) {
    this.userID = userID;
    return this;
  }

  

  /**
  * Get userID
  * @return userID
  **/
  @Schema(description = "")
  public Integer getUserID() {
    return userID;
  }
  public void setUserID(Integer userID) {
    this.userID = userID;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelMedia modelMedia = (ModelMedia) o;
    return Objects.equals(this.fileName, modelMedia.fileName) &&
        Objects.equals(this.gameDefinition, modelMedia.gameDefinition) &&
        Objects.equals(this.id, modelMedia.id) &&
        Objects.equals(this.narrativeDefinition, modelMedia.narrativeDefinition) &&
        Objects.equals(this.thumbnail, modelMedia.thumbnail) &&
        Objects.equals(this.url, modelMedia.url) &&
        Objects.equals(this.userID, modelMedia.userID);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(fileName, gameDefinition, id, narrativeDefinition, thumbnail, url, userID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelMedia {\n");
    
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    gameDefinition: ").append(toIndentedString(gameDefinition)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    narrativeDefinition: ").append(toIndentedString(narrativeDefinition)).append("\n");
    sb.append("    thumbnail: ").append(toIndentedString(thumbnail)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    userID: ").append(toIndentedString(userID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
