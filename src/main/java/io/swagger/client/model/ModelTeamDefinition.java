/*
 * Robolucha API
 * Robolucha API
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * ModelTeamDefinition
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-25T01:07:09.701808-04:00[America/Toronto]")public class ModelTeamDefinition {

  @SerializedName("friendlyFire")
  private Boolean friendlyFire = null;

  @SerializedName("gameDefinition")
  private Integer gameDefinition = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("teams")
  private List<ModelTeam> teams = null;
  public ModelTeamDefinition friendlyFire(Boolean friendlyFire) {
    this.friendlyFire = friendlyFire;
    return this;
  }

  

  /**
  * Get friendlyFire
  * @return friendlyFire
  **/
  @Schema(description = "")
  public Boolean isFriendlyFire() {
    return friendlyFire;
  }
  public void setFriendlyFire(Boolean friendlyFire) {
    this.friendlyFire = friendlyFire;
  }
  public ModelTeamDefinition gameDefinition(Integer gameDefinition) {
    this.gameDefinition = gameDefinition;
    return this;
  }

  

  /**
  * Get gameDefinition
  * @return gameDefinition
  **/
  @Schema(description = "")
  public Integer getGameDefinition() {
    return gameDefinition;
  }
  public void setGameDefinition(Integer gameDefinition) {
    this.gameDefinition = gameDefinition;
  }
  public ModelTeamDefinition id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public ModelTeamDefinition teams(List<ModelTeam> teams) {
    this.teams = teams;
    return this;
  }

  public ModelTeamDefinition addTeamsItem(ModelTeam teamsItem) {
    if (this.teams == null) {
      this.teams = new ArrayList<ModelTeam>();
    }
    this.teams.add(teamsItem);
    return this;
  }

  /**
  * Get teams
  * @return teams
  **/
  @Schema(description = "")
  public List<ModelTeam> getTeams() {
    return teams;
  }
  public void setTeams(List<ModelTeam> teams) {
    this.teams = teams;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelTeamDefinition modelTeamDefinition = (ModelTeamDefinition) o;
    return Objects.equals(this.friendlyFire, modelTeamDefinition.friendlyFire) &&
        Objects.equals(this.gameDefinition, modelTeamDefinition.gameDefinition) &&
        Objects.equals(this.id, modelTeamDefinition.id) &&
        Objects.equals(this.teams, modelTeamDefinition.teams);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(friendlyFire, gameDefinition, id, teams);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelTeamDefinition {\n");
    
    sb.append("    friendlyFire: ").append(toIndentedString(friendlyFire)).append("\n");
    sb.append("    gameDefinition: ").append(toIndentedString(gameDefinition)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    teams: ").append(toIndentedString(teams)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
