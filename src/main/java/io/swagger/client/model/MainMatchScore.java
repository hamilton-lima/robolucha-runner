/*
 * Robolucha API
 * Robolucha API
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/**
 * MainMatchScore
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-04-25T15:38:30.114990-03:00[America/Sao_Paulo]")public class MainMatchScore {

  @SerializedName("Deaths")
  private Integer deaths = null;

  @SerializedName("GameComponentID")
  private Integer gameComponentID = null;

  @SerializedName("Kills")
  private Integer kills = null;

  @SerializedName("MatchID")
  private Integer matchID = null;

  @SerializedName("Score")
  private Integer score = null;

  @SerializedName("createdAt")
  private String createdAt = null;

  @SerializedName("deletedAt")
  private String deletedAt = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("updatedAt")
  private String updatedAt = null;
  public MainMatchScore deaths(Integer deaths) {
    this.deaths = deaths;
    return this;
  }

  

  /**
  * Get deaths
  * @return deaths
  **/
  @Schema(description = "")
  public Integer getDeaths() {
    return deaths;
  }
  public void setDeaths(Integer deaths) {
    this.deaths = deaths;
  }
  public MainMatchScore gameComponentID(Integer gameComponentID) {
    this.gameComponentID = gameComponentID;
    return this;
  }

  

  /**
  * Get gameComponentID
  * @return gameComponentID
  **/
  @Schema(description = "")
  public Integer getGameComponentID() {
    return gameComponentID;
  }
  public void setGameComponentID(Integer gameComponentID) {
    this.gameComponentID = gameComponentID;
  }
  public MainMatchScore kills(Integer kills) {
    this.kills = kills;
    return this;
  }

  

  /**
  * Get kills
  * @return kills
  **/
  @Schema(description = "")
  public Integer getKills() {
    return kills;
  }
  public void setKills(Integer kills) {
    this.kills = kills;
  }
  public MainMatchScore matchID(Integer matchID) {
    this.matchID = matchID;
    return this;
  }

  

  /**
  * Get matchID
  * @return matchID
  **/
  @Schema(description = "")
  public Integer getMatchID() {
    return matchID;
  }
  public void setMatchID(Integer matchID) {
    this.matchID = matchID;
  }
  public MainMatchScore score(Integer score) {
    this.score = score;
    return this;
  }

  

  /**
  * Get score
  * @return score
  **/
  @Schema(description = "")
  public Integer getScore() {
    return score;
  }
  public void setScore(Integer score) {
    this.score = score;
  }
  public MainMatchScore createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  

  /**
  * Get createdAt
  * @return createdAt
  **/
  @Schema(description = "")
  public String getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }
  public MainMatchScore deletedAt(String deletedAt) {
    this.deletedAt = deletedAt;
    return this;
  }

  

  /**
  * Get deletedAt
  * @return deletedAt
  **/
  @Schema(description = "")
  public String getDeletedAt() {
    return deletedAt;
  }
  public void setDeletedAt(String deletedAt) {
    this.deletedAt = deletedAt;
  }
  public MainMatchScore id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public MainMatchScore updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  

  /**
  * Get updatedAt
  * @return updatedAt
  **/
  @Schema(description = "")
  public String getUpdatedAt() {
    return updatedAt;
  }
  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MainMatchScore mainMatchScore = (MainMatchScore) o;
    return Objects.equals(this.deaths, mainMatchScore.deaths) &&
        Objects.equals(this.gameComponentID, mainMatchScore.gameComponentID) &&
        Objects.equals(this.kills, mainMatchScore.kills) &&
        Objects.equals(this.matchID, mainMatchScore.matchID) &&
        Objects.equals(this.score, mainMatchScore.score) &&
        Objects.equals(this.createdAt, mainMatchScore.createdAt) &&
        Objects.equals(this.deletedAt, mainMatchScore.deletedAt) &&
        Objects.equals(this.id, mainMatchScore.id) &&
        Objects.equals(this.updatedAt, mainMatchScore.updatedAt);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(deaths, gameComponentID, kills, matchID, score, createdAt, deletedAt, id, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MainMatchScore {\n");
    
    sb.append("    deaths: ").append(toIndentedString(deaths)).append("\n");
    sb.append("    gameComponentID: ").append(toIndentedString(gameComponentID)).append("\n");
    sb.append("    kills: ").append(toIndentedString(kills)).append("\n");
    sb.append("    matchID: ").append(toIndentedString(matchID)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
