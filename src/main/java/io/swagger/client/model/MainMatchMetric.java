/*
 * Robolucha API
 * Robolucha API
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/**
 * MainMatchMetric
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-06-29T23:52:21.322Z[GMT]")public class MainMatchMetric {

  @SerializedName("fps")
  private Integer fps = null;

  @SerializedName("fpsSentToPublisher")
  private Integer fpsSentToPublisher = null;

  @SerializedName("gameDefinitionID")
  private Integer gameDefinitionID = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("matchID")
  private Integer matchID = null;

  @SerializedName("players")
  private Integer players = null;
  public MainMatchMetric fps(Integer fps) {
    this.fps = fps;
    return this;
  }

  

  /**
  * Get fps
  * @return fps
  **/
  @Schema(description = "")
  public Integer getFps() {
    return fps;
  }
  public void setFps(Integer fps) {
    this.fps = fps;
  }
  public MainMatchMetric fpsSentToPublisher(Integer fpsSentToPublisher) {
    this.fpsSentToPublisher = fpsSentToPublisher;
    return this;
  }

  

  /**
  * Get fpsSentToPublisher
  * @return fpsSentToPublisher
  **/
  @Schema(description = "")
  public Integer getFpsSentToPublisher() {
    return fpsSentToPublisher;
  }
  public void setFpsSentToPublisher(Integer fpsSentToPublisher) {
    this.fpsSentToPublisher = fpsSentToPublisher;
  }
  public MainMatchMetric gameDefinitionID(Integer gameDefinitionID) {
    this.gameDefinitionID = gameDefinitionID;
    return this;
  }

  

  /**
  * Get gameDefinitionID
  * @return gameDefinitionID
  **/
  @Schema(description = "")
  public Integer getGameDefinitionID() {
    return gameDefinitionID;
  }
  public void setGameDefinitionID(Integer gameDefinitionID) {
    this.gameDefinitionID = gameDefinitionID;
  }
  public MainMatchMetric id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public MainMatchMetric matchID(Integer matchID) {
    this.matchID = matchID;
    return this;
  }

  

  /**
  * Get matchID
  * @return matchID
  **/
  @Schema(description = "")
  public Integer getMatchID() {
    return matchID;
  }
  public void setMatchID(Integer matchID) {
    this.matchID = matchID;
  }
  public MainMatchMetric players(Integer players) {
    this.players = players;
    return this;
  }

  

  /**
  * Get players
  * @return players
  **/
  @Schema(description = "")
  public Integer getPlayers() {
    return players;
  }
  public void setPlayers(Integer players) {
    this.players = players;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MainMatchMetric mainMatchMetric = (MainMatchMetric) o;
    return Objects.equals(this.fps, mainMatchMetric.fps) &&
        Objects.equals(this.fpsSentToPublisher, mainMatchMetric.fpsSentToPublisher) &&
        Objects.equals(this.gameDefinitionID, mainMatchMetric.gameDefinitionID) &&
        Objects.equals(this.id, mainMatchMetric.id) &&
        Objects.equals(this.matchID, mainMatchMetric.matchID) &&
        Objects.equals(this.players, mainMatchMetric.players);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(fps, fpsSentToPublisher, gameDefinitionID, id, matchID, players);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MainMatchMetric {\n");
    
    sb.append("    fps: ").append(toIndentedString(fps)).append("\n");
    sb.append("    fpsSentToPublisher: ").append(toIndentedString(fpsSentToPublisher)).append("\n");
    sb.append("    gameDefinitionID: ").append(toIndentedString(gameDefinitionID)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    matchID: ").append(toIndentedString(matchID)).append("\n");
    sb.append("    players: ").append(toIndentedString(players)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
