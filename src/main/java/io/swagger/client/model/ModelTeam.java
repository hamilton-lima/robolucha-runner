/*
 * Robolucha API
 * Robolucha API
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/**
 * ModelTeam
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-11-04T21:21:42.311875-05:00[America/Toronto]")public class ModelTeam {

  @SerializedName("color")
  private String color = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("maxParticipants")
  private Integer maxParticipants = null;

  @SerializedName("minParticipants")
  private Integer minParticipants = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("teamDefinition")
  private Integer teamDefinition = null;
  public ModelTeam color(String color) {
    this.color = color;
    return this;
  }

  

  /**
  * Get color
  * @return color
  **/
  @Schema(description = "")
  public String getColor() {
    return color;
  }
  public void setColor(String color) {
    this.color = color;
  }
  public ModelTeam id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public ModelTeam maxParticipants(Integer maxParticipants) {
    this.maxParticipants = maxParticipants;
    return this;
  }

  

  /**
  * Get maxParticipants
  * @return maxParticipants
  **/
  @Schema(description = "")
  public Integer getMaxParticipants() {
    return maxParticipants;
  }
  public void setMaxParticipants(Integer maxParticipants) {
    this.maxParticipants = maxParticipants;
  }
  public ModelTeam minParticipants(Integer minParticipants) {
    this.minParticipants = minParticipants;
    return this;
  }

  

  /**
  * Get minParticipants
  * @return minParticipants
  **/
  @Schema(description = "")
  public Integer getMinParticipants() {
    return minParticipants;
  }
  public void setMinParticipants(Integer minParticipants) {
    this.minParticipants = minParticipants;
  }
  public ModelTeam name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public ModelTeam teamDefinition(Integer teamDefinition) {
    this.teamDefinition = teamDefinition;
    return this;
  }

  

  /**
  * Get teamDefinition
  * @return teamDefinition
  **/
  @Schema(description = "")
  public Integer getTeamDefinition() {
    return teamDefinition;
  }
  public void setTeamDefinition(Integer teamDefinition) {
    this.teamDefinition = teamDefinition;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelTeam modelTeam = (ModelTeam) o;
    return Objects.equals(this.color, modelTeam.color) &&
        Objects.equals(this.id, modelTeam.id) &&
        Objects.equals(this.maxParticipants, modelTeam.maxParticipants) &&
        Objects.equals(this.minParticipants, modelTeam.minParticipants) &&
        Objects.equals(this.name, modelTeam.name) &&
        Objects.equals(this.teamDefinition, modelTeam.teamDefinition);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(color, id, maxParticipants, minParticipants, name, teamDefinition);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelTeam {\n");
    
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    maxParticipants: ").append(toIndentedString(maxParticipants)).append("\n");
    sb.append("    minParticipants: ").append(toIndentedString(minParticipants)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    teamDefinition: ").append(toIndentedString(teamDefinition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
